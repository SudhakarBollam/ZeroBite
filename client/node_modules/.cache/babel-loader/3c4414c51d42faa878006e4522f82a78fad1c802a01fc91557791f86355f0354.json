{"ast":null,"code":"var _jsxFileName = \"D:\\\\ZeroBiteBhimavaram\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n\n  // useEffect hook runs after the component mounts\n  useEffect(() => {\n    // Fetch data from the backend API\n    fetch('http://localhost:5000/api/test').then(res => res.json()).then(data => setMessage(data.message)).catch(err => console.error(\"Error fetching data: \", err));\n  }, []); // The empty array means this effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px',\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to ZeroBite Bhimavaram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is the starting point of your application.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'blue',\n        fontWeight: 'bold'\n      },\n      children: message ? message : \"Loading message from backend...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3v4ozrfWvlmZ97O5zgyhgDZKC+M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","message","setMessage","fetch","then","res","json","data","catch","err","console","error","style","textAlign","marginTop","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","color","fontWeight","_c","$RefreshReg$"],"sources":["D:/ZeroBiteBhimavaram/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState('');\r\n\r\n  // useEffect hook runs after the component mounts\r\n  useEffect(() => {\r\n    // Fetch data from the backend API\r\n    fetch('http://localhost:5000/api/test')\r\n      .then(res => res.json())\r\n      .then(data => setMessage(data.message))\r\n      .catch(err => console.error(\"Error fetching data: \", err));\r\n  }, []); // The empty array means this effect runs only once\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: '50px', fontFamily: 'Arial' }}>\r\n      <h1>Welcome to ZeroBite Bhimavaram</h1>\r\n      <p>This is the starting point of your application.</p>\r\n      <p style={{ color: 'blue', fontWeight: 'bold' }}>\r\n        {/* Display the message from the backend here */}\r\n        {message ? message : \"Loading message from backend...\"}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIL,UAAU,CAACK,IAAI,CAACN,OAAO,CAAC,CAAC,CACtCO,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAC9D,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEX,OAAA;IAAKc,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC1ElB,OAAA;MAAAkB,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCtB,OAAA;MAAAkB,QAAA,EAAG;IAA+C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtDtB,OAAA;MAAGc,KAAK,EAAE;QAAES,KAAK,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAN,QAAA,EAE7Cf,OAAO,GAAGA,OAAO,GAAG;IAAiC;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACpB,EAAA,CAtBQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}